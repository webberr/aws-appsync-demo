/*!
 * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * Licensed under the Amazon Software License (the "License"). You may not use this file except in compliance with the License. A copy of
 * the License is located at
 *     http://aws.amazon.com/asl/
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, express or implied. See the License for the specific language governing permissions and limitations under the License.
 */
import { Store, Reducer } from 'redux';
import { AWSAppSyncClient, OfflineCallback } from './client';
import { NormalizedCacheObject, IdGetter } from 'apollo-cache-inmemory';
import { NetInfo, NetworkCallback } from '@redux-offline/redux-offline/lib/types';
declare const newStore: <TCacheShape extends NormalizedCacheObject>(clientGetter: () => AWSAppSyncClient<TCacheShape>, persistCallback: () => any, dataIdFromObject: (obj: any) => string, storage: any, callback?: OfflineCallback) => Store<any>;
export declare type OfflineEffectConfig = {
    enqueueAction: string;
    effect?: Function;
    discard?: Function;
    retry?: Function;
    reducer?: (dataIdFromObject: IdGetter) => Reducer<any>;
};
export declare type OfflineStatusChangeCallbackCreator = (callback: NetworkCallback) => void;
export declare type OfflineStatusChangeCallback = (result: {
    online: boolean;
    netInfo?: NetInfo;
}) => void;
export { newStore as createStore };
