{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\ryan_\\\\aws-appsync-demo\\\\src\\\\App.js\",\"C:\\\\Users\\\\ryan_\\\\aws-appsync-demo\\\\src\\\\graphql\\\\mutations.js\",\"C:\\\\Users\\\\ryan_\\\\aws-appsync-demo\\\\src\\\\graphql\\\\queries.js\",\"C:\\\\Users\\\\ryan_\\\\aws-appsync-demo\\\\src\\\\graphql\\\\subscriptions.js\",\"C:\\\\Users\\\\ryan_\\\\aws-appsync-demo\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\ryan_\\\\aws-appsync-demo\\\\src\\\\aws-exports.js\",\"C:\\\\Users\\\\ryan_\\\\aws-appsync-demo\\\\src\\\\index.js\"],\"names\":[\"AddTodo\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"name\",\"description\",\"ev\",\"setState\",\"defineProperty\",\"target\",\"value\",\"onCreate\",\"input\",\"console\",\"log\",\"_this2\",\"react_default\",\"a\",\"createElement\",\"className\",\"placeholder\",\"onChange\",\"handleChange\",\"type\",\"onClick\",\"submit\",\"bind\",\"React\",\"Component\",\"App\",\"ListView\",\"_ref\",\"todos\",\"map\",\"todo\",\"key\",\"id\",\"dist\",\"mutation\",\"graphqlOperation\",\"_ref2\",\"App_AddTodo\",\"query\",\"subscription\",\"onSubscriptionMsg\",\"prev\",\"_ref3\",\"onCreateTodo\",\"_ref4\",\"listTodos\",\"data\",\"loading\",\"error\",\"items\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"awsmobile\",\"aws_project_region\",\"aws_appsync_graphqlEndpoint\",\"aws_appsync_region\",\"aws_appsync_authenticationType\",\"aws_appsync_apiKey\",\"Amplify\",\"configure\",\"aws_config\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"6UAQMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,KAAM,GACNC,YAAa,IAJAT,4EAQNQ,EAAME,GACfP,KAAKQ,SAALV,OAAAW,EAAA,EAAAX,CAAA,GAAiBO,EAAOE,EAAGG,OAAOC,gKAI5BC,EAAaZ,KAAKJ,MAAlBgB,SACJC,EAAQ,CACVR,KAAML,KAAKI,MAAMC,KACjBC,YAAaN,KAAKI,MAAME,aAE1BQ,QAAQC,IAAIF,YACND,EAAS,CAACC,MAAAA,uIAGV,IAAAG,EAAAhB,KACN,OACEiB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAA,KACEF,EAAAC,EAAAC,cAAA,QAAA,CACId,KAAK,OACLgB,YAAY,OACZC,SAAU,SAACf,GAASS,EAAKO,aAAa,OAAQhB,MAOlDU,EAAAC,EAAAC,cAAA,SAAA,CAAQK,KAAK,SAASC,QAASzB,KAAK0B,OAAOC,KAAK3B,OAAhD,wBAtCU4B,EAAAA,EAAMC,WAqFbC,mLApCX,IAAMC,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACfhB,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,KAAA,KAAA,aACAF,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,WACXa,EAAMC,IAAI,SAAAC,GAAI,OAAIlB,EAAAC,EAAAC,cAAA,KAAA,CAAIiB,IAAKD,EAAKE,IAAKF,EAAK9B,WAKnD,OACEY,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmB,EAAA,QAAD,CAASC,SAAUC,OAAAA,EAAAA,iBAAAA,CCjEJ,gIDkEZ,SAAAC,GAAA,IAAEF,EAAFE,EAAEF,SAAF,OACCtB,EAAAC,EAAAC,cAACuB,EAAD,CAAS9B,SAAU2B,MAIvBtB,EAAAC,EAAAC,cAACmB,EAAA,QAAD,CAASK,MAAOH,OAAAA,EAAAA,iBAAAA,CE/DF,2PFgEZI,aAAcJ,OAAAA,EAAAA,iBAAAA,CGxEC,8FHyEfK,kBAAmB,SAACC,EAADC,GAA0B,IAAlBC,EAAkBD,EAAlBC,aAEvB,OADAlC,QAAQC,IAAI,qBAAsBiC,GAC3BF,IAGZ,SAAAG,GAA6C,IAAlCC,EAAkCD,EAA1CE,KAAQD,UAAaE,EAAqBH,EAArBG,QACvB,OAD4CH,EAAZI,MACdpC,EAAAC,EAAAC,cAAA,KAAA,KAAA,SACdiC,IAAYF,EAAkBjC,EAAAC,EAAAC,cAAA,KAAA,KAAA,cACzBF,EAAAC,EAAAC,cAACY,EAAD,CAAUE,MAAOiB,EAAUI,kBA9B5B1B,EAAAA,EAAMC,WI1CJ0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DChBN,IASeC,EATI,CACfC,mBAAsB,YACtBC,4BAA+B,iFAC/BC,mBAAsB,YACtBC,+BAAkC,UAClCC,mBAAsB,kCCE1BC,EAAAA,EAAQC,UAAUC,GAElBC,EAAAA,EAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MAASC,SAASC,eAAe,SFsH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\nimport { graphqlOperation } from \\\"aws-amplify\\\";\\nimport { Connect } from \\\"aws-amplify-react\\\";\\n\\nimport * as mutations from './graphql/mutations';\\nimport * as queries from './graphql/queries';\\nimport * as subscriptions from './graphql/subscriptions';\\n\\nclass AddTodo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n        name: '',\\n        description: '',\\n    };\\n  }\\n\\n  handleChange(name, ev) {\\n      this.setState({ [name]: ev.target.value });\\n  }\\n\\n  async submit() {\\n    const { onCreate } = this.props;\\n    var input = {\\n      name: this.state.name,\\n      description: this.state.description\\n    }\\n    console.log(input);\\n    await onCreate({input})\\n  }\\n\\n  render(){\\n    return (\\n      <div className=\\\"todoListMain\\\">\\n        <div className=\\\"header\\\">\\n          <form>\\n            <input\\n                name=\\\"name\\\"\\n                placeholder=\\\"name\\\"\\n                onChange={(ev) => { this.handleChange('name', ev)}}\\n            />\\n          {/*<input\\n                name=\\\"description\\\"\\n                placeholder=\\\"description\\\"\\n                onChange={(ev) => { this.handleChange('description', ev)}}\\n            />*/}\\n            <button type=\\\"submit\\\" onClick={this.submit.bind(this)}> Add Task </button>\\n          </form>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nclass App extends React.Component {\\n  render() {\\n\\n    const ListView = ({ todos }) => (\\n      <div>\\n          <h3>All Tasks</h3>\\n          <ul className=\\\"theList\\\">\\n            {todos.map(todo => <li key={todo.id}>{todo.name}</li>)}\\n          </ul>\\n      </div>\\n    )\\n\\n    return (\\n      <div className=\\\"App\\\">\\n        <Connect mutation={graphqlOperation(mutations.createTodo)}>\\n          {({mutation}) => (\\n            <AddTodo onCreate={mutation} />\\n          )}\\n        </Connect>\\n\\n        <Connect query={graphqlOperation(queries.listTodos)}\\n          subscription={graphqlOperation(subscriptions.onCreateTodo)}\\n          onSubscriptionMsg={(prev, {onCreateTodo}) => {\\n              console.log('Subscription data:', onCreateTodo)\\n              return prev;\\n            }\\n          }>\\n        {({ data: { listTodos }, loading, error }) => {\\n          if (error) return <h3>Error</h3>;\\n          if (loading || !listTodos) return <h3>Loading...</h3>;\\n            return <ListView todos={listTodos.items} />\\n        }}\\n        </Connect>\\n      </div>\\n\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// eslint-disable\\n// this is an auto generated file. This will be overwritten\\n\\nexport const createTodo = `mutation CreateTodo($input: CreateTodoInput!) {\\n  createTodo(input: $input) {\\n    id\\n    name\\n    description\\n  }\\n}\\n`;\\nexport const updateTodo = `mutation UpdateTodo($input: UpdateTodoInput!) {\\n  updateTodo(input: $input) {\\n    id\\n    name\\n    description\\n  }\\n}\\n`;\\nexport const deleteTodo = `mutation DeleteTodo($input: DeleteTodoInput!) {\\n  deleteTodo(input: $input) {\\n    id\\n    name\\n    description\\n  }\\n}\\n`;\\n\",\"// eslint-disable\\n// this is an auto generated file. This will be overwritten\\n\\nexport const getTodo = `query GetTodo($id: ID!) {\\n  getTodo(id: $id) {\\n    id\\n    name\\n    description\\n  }\\n}\\n`;\\nexport const listTodos = `query ListTodos(\\n  $filter: ModelTodoFilterInput\\n  $limit: Int\\n  $nextToken: String\\n) {\\n  listTodos(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n    items {\\n      id\\n      name\\n      description\\n    }\\n    nextToken\\n  }\\n}\\n`;\\n\",\"// eslint-disable\\n// this is an auto generated file. This will be overwritten\\n\\nexport const onCreateTodo = `subscription OnCreateTodo {\\n  onCreateTodo {\\n    id\\n    name\\n    description\\n  }\\n}\\n`;\\nexport const onUpdateTodo = `subscription OnUpdateTodo {\\n  onUpdateTodo {\\n    id\\n    name\\n    description\\n  }\\n}\\n`;\\nexport const onDeleteTodo = `subscription OnDeleteTodo {\\n  onDeleteTodo {\\n    id\\n    name\\n    description\\n  }\\n}\\n`;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\\n\\nconst awsmobile =  {\\n    \\\"aws_project_region\\\": \\\"us-west-2\\\",\\n    \\\"aws_appsync_graphqlEndpoint\\\": \\\"https://ya6bilabdjcyll7yux2op2ehuu.appsync-api.us-west-2.amazonaws.com/graphql\\\",\\n    \\\"aws_appsync_region\\\": \\\"us-west-2\\\",\\n    \\\"aws_appsync_authenticationType\\\": \\\"API_KEY\\\",\\n    \\\"aws_appsync_apiKey\\\": \\\"da2-5uiaspn4dbbtdnc4mmhjxaz6aq\\\"\\n};\\n\\n\\nexport default awsmobile;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport './App.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nimport Amplify from 'aws-amplify'\\nimport aws_config from './aws-exports'\\nAmplify.configure(aws_config)\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{140:function(e,n,t){e.exports=t(348)},145:function(e,n,t){},147:function(e,n,t){},348:function(e,n,t){\"use strict\";t.r(n);var a=t(0),o=t.n(a),r=t(137),i=t.n(r),c=(t(145),t(147),t(56)),s=t.n(c),u=t(138),l=t(139),p=t(57),m=t(58),d=t(62),h=t(59),b=t(63),f=t(22),v=t.n(f),w=t(61),g=function(e){function n(e){var t;return Object(p.a)(this,n),(t=Object(d.a)(this,Object(h.a)(n).call(this,e))).state={name:\"\",description:\"\"},t}return Object(b.a)(n,e),Object(m.a)(n,[{key:\"handleChange\",value:function(e,n){this.setState(Object(l.a)({},e,n.target.value))}},{key:\"submit\",value:function(){var e=Object(u.a)(s.a.mark(function e(){var n,t;return s.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=this.props.onCreate,t={name:this.state.name,description:this.state.description},console.log(t),e.next=5,n({input:t});case 5:case\"end\":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},{key:\"render\",value:function(){var e=this;return o.a.createElement(\"div\",{className:\"todoListMain\"},o.a.createElement(\"div\",{className:\"header\"},o.a.createElement(\"form\",null,o.a.createElement(\"input\",{name:\"name\",placeholder:\"name\",onChange:function(n){e.handleChange(\"name\",n)}}),o.a.createElement(\"button\",{type:\"submit\",onClick:this.submit.bind(this)},\" Add Task \"))))}}]),n}(o.a.Component),y=function(e){function n(){return Object(p.a)(this,n),Object(d.a)(this,Object(h.a)(n).apply(this,arguments))}return Object(b.a)(n,e),Object(m.a)(n,[{key:\"render\",value:function(){var e=function(e){var n=e.todos;return o.a.createElement(\"div\",null,o.a.createElement(\"h3\",null,\"All Tasks\"),o.a.createElement(\"ul\",{className:\"theList\"},n.map(function(e){return o.a.createElement(\"li\",{key:e.id},e.name)})))};return o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(w.Connect,{mutation:Object(f.graphqlOperation)(\"mutation CreateTodo($input: CreateTodoInput!) {\\n  createTodo(input: $input) {\\n    id\\n    name\\n    description\\n  }\\n}\\n\")},function(e){var n=e.mutation;return o.a.createElement(g,{onCreate:n})}),o.a.createElement(w.Connect,{query:Object(f.graphqlOperation)(\"query ListTodos(\\n  $filter: ModelTodoFilterInput\\n  $limit: Int\\n  $nextToken: String\\n) {\\n  listTodos(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n    items {\\n      id\\n      name\\n      description\\n    }\\n    nextToken\\n  }\\n}\\n\"),subscription:Object(f.graphqlOperation)(\"subscription OnCreateTodo {\\n  onCreateTodo {\\n    id\\n    name\\n    description\\n  }\\n}\\n\"),onSubscriptionMsg:function(e,n){var t=n.onCreateTodo;return console.log(\"Subscription data:\",t),e}},function(n){var t=n.data.listTodos,a=n.loading;return n.error?o.a.createElement(\"h3\",null,\"Error\"):a||!t?o.a.createElement(\"h3\",null,\"Loading...\"):o.a.createElement(e,{todos:t.items})}))}}]),n}(o.a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var E={aws_project_region:\"us-west-2\",aws_appsync_graphqlEndpoint:\"https://ya6bilabdjcyll7yux2op2ehuu.appsync-api.us-west-2.amazonaws.com/graphql\",aws_appsync_region:\"us-west-2\",aws_appsync_authenticationType:\"API_KEY\",aws_appsync_apiKey:\"da2-5uiaspn4dbbtdnc4mmhjxaz6aq\"};v.a.configure(E),i.a.render(o.a.createElement(y,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},39:function(e,n){}},[[140,2,1]]]);","extractedComments":[]}