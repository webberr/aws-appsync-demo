{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_1 = require(\"react\");\n\nvar AmplifyUI_1 = require(\"../AmplifyUI\");\n\nvar AmplifyTheme_1 = require(\"../AmplifyTheme\");\n\nvar core_1 = require(\"@aws-amplify/core\");\n\nvar interactions_1 = require(\"@aws-amplify/interactions\");\n\nvar styles = {\n  itemMe: {\n    padding: 10,\n    fontSize: 12,\n    color: 'gray',\n    marginTop: 4,\n    textAlign: 'right'\n  },\n  itemBot: {\n    fontSize: 12,\n    textAlign: 'left'\n  },\n  list: {\n    height: '300px',\n    overflow: 'auto'\n  },\n  textInput: Object.assign({}, AmplifyTheme_1.Input, {\n    display: 'inline-block',\n    width: 'calc(100% - 90px - 15px)'\n  }),\n  button: Object.assign({}, AmplifyTheme_1.Button, {\n    width: '90px',\n    float: 'right'\n  })\n};\n\nvar ChatBot =\n/** @class */\nfunction (_super) {\n  __extends(ChatBot, _super);\n\n  function ChatBot(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      dialog: [{\n        message: _this.props.welcomeMessage || 'Welcome to Lex',\n        from: 'system'\n      }],\n      inputText: ''\n    };\n    _this.changeInputText = _this.changeInputText.bind(_this);\n    _this.listItems = _this.listItems.bind(_this);\n    _this.submit = _this.submit.bind(_this);\n    _this.listItemsRef = React.createRef();\n    return _this;\n  }\n\n  ChatBot.prototype.listItems = function () {\n    return this.state.dialog.map(function (m, i) {\n      if (m.from === 'me') {\n        return React.createElement(\"div\", {\n          key: i,\n          style: styles.itemMe\n        }, m.message);\n      } else if (m.from === 'system') {\n        return React.createElement(\"div\", {\n          key: i,\n          style: styles.itemBot\n        }, m.message);\n      } else {\n        return React.createElement(\"div\", {\n          key: i,\n          style: styles.itemBot\n        }, m.message);\n      }\n    });\n  };\n\n  ChatBot.prototype.submit = function (e) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            e.preventDefault();\n\n            if (!this.state.inputText) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , new Promise(function (resolve) {\n              return _this.setState({\n                dialog: _this.state.dialog.concat([{\n                  message: _this.state.inputText,\n                  from: 'me'\n                }])\n              }, resolve);\n            })];\n\n          case 1:\n            _a.sent();\n\n            if (!interactions_1.default || typeof interactions_1.default.send !== 'function') {\n              throw new Error('No Interactions module found, please ensure @aws-amplify/interactions is imported');\n            }\n\n            return [4\n            /*yield*/\n            , interactions_1.default.send(this.props.botName, this.state.inputText)];\n\n          case 2:\n            response = _a.sent();\n            return [4\n            /*yield*/\n            , this.setState({\n              dialog: this.state.dialog.concat([response && {\n                from: 'bot',\n                message: response.message\n              }]),\n              inputText: ''\n            })];\n\n          case 3:\n            _a.sent();\n\n            this.listItemsRef.current.scrollTop = this.listItemsRef.current.scrollHeight;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ChatBot.prototype.changeInputText = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.setState({\n              inputText: event.target.value\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ChatBot.prototype.getOnComplete = function (fn) {\n    var _this = this;\n\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var clearOnComplete = _this.props.clearOnComplete;\n      var message = fn.apply(void 0, args);\n\n      _this.setState({\n        dialog: (!clearOnComplete && _this.state.dialog).concat([message && {\n          from: 'bot',\n          message: message\n        }]).filter(Boolean)\n      }, function () {\n        _this.listItemsRef.current.scrollTop = _this.listItemsRef.current.scrollHeight;\n      });\n    };\n  };\n\n  ChatBot.prototype.componentDidMount = function () {\n    var _a = this.props,\n        onComplete = _a.onComplete,\n        botName = _a.botName;\n\n    if (onComplete && botName) {\n      if (!interactions_1.default || typeof interactions_1.default.onComplete !== 'function') {\n        throw new Error('No Interactions module found, please ensure @aws-amplify/interactions is imported');\n      }\n\n      interactions_1.default.onComplete(botName, this.getOnComplete(onComplete, this));\n    }\n  };\n\n  ChatBot.prototype.componentDidUpdate = function (prevProps) {\n    var _a = this.props,\n        onComplete = _a.onComplete,\n        botName = _a.botName;\n\n    if (botName && this.props.onComplete !== prevProps.onComplete) {\n      if (!interactions_1.default || typeof interactions_1.default.onComplete !== 'function') {\n        throw new Error('No Interactions module found, please ensure @aws-amplify/interactions is imported');\n      }\n\n      interactions_1.default.onComplete(botName, this.getOnComplete(onComplete, this));\n    }\n  };\n\n  ChatBot.prototype.render = function () {\n    var _a = this.props,\n        title = _a.title,\n        theme = _a.theme,\n        onComplete = _a.onComplete;\n    return React.createElement(AmplifyUI_1.FormSection, {\n      theme: theme\n    }, title && React.createElement(AmplifyUI_1.SectionHeader, {\n      theme: theme\n    }, core_1.I18n.get(title)), React.createElement(AmplifyUI_1.SectionBody, {\n      theme: theme\n    }, React.createElement(\"div\", {\n      ref: this.listItemsRef,\n      style: styles.list\n    }, this.listItems())), React.createElement(AmplifyUI_1.SectionFooter, {\n      theme: theme\n    }, React.createElement(\"form\", {\n      onSubmit: this.submit\n    }, React.createElement(\"input\", {\n      style: styles.textInput,\n      type: 'text',\n      placeholder: core_1.I18n.get(\"Type your message here\"),\n      onChange: this.changeInputText,\n      value: this.state.inputText\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      style: styles.button\n    }, core_1.I18n.get('Send')))));\n  };\n\n  return ChatBot;\n}(react_1.Component);\n\nexports.ChatBot = ChatBot;\nChatBot.defaultProps = {\n  title: '',\n  botName: '',\n  onComplete: undefined,\n  clearOnComplete: false\n};\nexports.default = ChatBot;","map":null,"metadata":{},"sourceType":"script"}